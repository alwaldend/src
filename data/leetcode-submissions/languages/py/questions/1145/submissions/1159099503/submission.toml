[[Submissions]]
  Id = 1159099503
  StatusDisplay = "Accepted"
  Lang = "python3"
  QuestionId = 1145
  TitleSlug = "number-of-submatrices-that-sum-to-target"
  Code = "class Solution:\n    def numSubmatrixSumTarget(self, matrix, target):\n        m, n = len(matrix), len(matrix[0])\n\n        for row in range(m):\n            for col in range(1, n):\n                matrix[row][col] += matrix[row][col - 1]\n\n        count = 0\n\n        for c1 in range(n):\n            for c2 in range(c1, n):\n                prefix_sum_count = {0: 1}\n                sum_val = 0\n\n                for row in range(m):\n                    sum_val += matrix[row][c2] - (matrix[row][c1 - 1] if c1 > 0 else 0)\n                    count += prefix_sum_count.get(sum_val - target, 0)\n                    prefix_sum_count[sum_val] = prefix_sum_count.get(sum_val, 0) + 1\n\n        return count\n\n"
  Title = "Number of Submatrices That Sum to Target"
  Url = "/submissions/detail/1159099503/"
  LangName = "Python3"
  Timestamp = 1706438043
  Status = 10
  Runtime = "422 ms"
  IsPending = "Not Pending"
  Memory = "17.7 MB"
  CompareResult = "1111111111111111111111111111111111111111"
  HasNotes = false
  FlagType = 1

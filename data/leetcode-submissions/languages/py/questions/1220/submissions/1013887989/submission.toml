[[Submissions]]
  Id = 1013887989
  StatusDisplay = "Accepted"
  Lang = "python3"
  QuestionId = 1220
  TitleSlug = "smallest-sufficient-team"
  Code = "class Solution:\n    def smallestSufficientTeam(self, req_skills: List[str], people: List[List[str]]) -> List[int]:\n        req_skills_count = len(req_skills)\n        skill_to_people = defaultdict(set)\n        for i, person in enumerate(people):\n            for skill in person:\n                skill_to_people[skill].add(i)\n\n        current = set()\n        \n        def backtrack(skill: int) -> Tuple[int]:\n            if skill == req_skills_count:\n                return tuple(current)\n            \n            suff_team = None\n            people_with_skill = skill_to_people[req_skills[skill]] \n            \n            if current & people_with_skill:\n                return backtrack(skill + 1)\n        \n            for person in people_with_skill:\n                current.add(person)\n                new_team = backtrack(skill + 1)\n                current.remove(person)\n\n                if suff_team is None or len(new_team) < len(suff_team):\n                    suff_team = new_team\n\n            return suff_team\n\n        return backtrack(0)\n        \n"
  Title = "Smallest Sufficient Team"
  Url = "/submissions/detail/1013887989/"
  LangName = "Python3"
  Timestamp = 1691331521
  Status = 10
  Runtime = "5965 ms"
  IsPending = "Not Pending"
  Memory = "16.4 MB"
  CompareResult = "11111111111111111111111111111111111111"
  HasNotes = false
  FlagType = 1

[[Submissions]]
  Id = 1015877410
  StatusDisplay = "Accepted"
  Lang = "python3"
  QuestionId = 64
  TitleSlug = "minimum-path-sum"
  Code = "class Solution:\n    def minPathSum(self, grid: List[List[int]]) -> int:\n        row_count = len(grid)\n        column_count = len(grid[0]) if grid else None\n        if not row_count or not column_count:\n            return 0\n\n        dp = [[0] * column_count for _ in range(row_count)]\n        dp[0][0] = grid[0][0]\n\n        for column in range(1, column_count):\n            dp[0][column] = grid[0][column] + dp[0][column - 1]\n\n        for row in range(1, row_count):\n            dp[row][0] = grid[row][0] + dp[row - 1][0]\n\n            for column in range(1, column_count):\n                dp[row][column] = grid[row][column] + min(\n                    dp[row - 1][column], dp[row][column-1]\n                )\n\n        # @cache\n        # def dp(row: int, column: int) -> int:\n        #     if row == row_count or column == column_count:\n        #         return 0\n        #     return grid[row][column] + min(dp(row + 1, column), dp(row, column + 1))\n        #return dp(0, 0)\n\n        return dp[-1][-1]"
  Title = "Minimum Path Sum"
  Url = "/submissions/detail/1015877410/"
  LangName = "Python3"
  Timestamp = 1691515881
  Status = 10
  Runtime = "88 ms"
  IsPending = "Not Pending"
  Memory = "18 MB"
  CompareResult = "1111111111111111111111111111111111111111111111111111111111111"
  HasNotes = false
  FlagType = 1

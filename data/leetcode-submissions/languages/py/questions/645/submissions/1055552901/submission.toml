[[Submissions]]
  Id = 1055552901
  StatusDisplay = "Accepted"
  Lang = "python3"
  QuestionId = 645
  TitleSlug = "set-mismatch"
  Code = "class Solution:\n    def findErrorNums(self, nums: List[int]) -> List[int]:\n        n = len(nums)\n        dupl_xor_miss = 0\n        for i in range(1, n+1):\n            dupl_xor_miss ^= i ^ nums[i-1]\n        \n        # example for get rightmost set bit\n        # x:             01110000\n        # ~x:            10001111\n        # -x or ~x + 1:  10010000\n        # x & -x:        00010000\n\n        # example for unset rightmost set bit\n        # x:             01110000\n        # x-1:           01101111\n        # x & (x-1):     01100000\n        rightmost_set_bit = dupl_xor_miss & -dupl_xor_miss\n        xor_group1 = xor_group2 = 0\n        for i in range(1, n + 1):\n            if i & rightmost_set_bit:\n                xor_group1 ^= i\n            else:\n                xor_group2 ^= i\n            if nums[i-1] & rightmost_set_bit:\n                xor_group1 ^= nums[i-1]\n            else:\n                xor_group2 ^= nums[i-1]\n        \n        for num in nums:\n            if num == xor_group1:\n                return [num, xor_group2]\n            if num == xor_group2:\n                return [num, xor_group1]\n\n        return []"
  Title = "Set Mismatch"
  Url = "/submissions/detail/1055552901/"
  LangName = "Python3"
  Timestamp = 1695312694
  Status = 10
  Runtime = "197 ms"
  IsPending = "Not Pending"
  Memory = "17.6 MB"
  CompareResult = "1111111111111111111111111111111111111111111111111"
  HasNotes = false
  FlagType = 1

[[Submissions]]
  Id = 1050849923
  StatusDisplay = "Accepted"
  Lang = "python3"
  QuestionId = 1905
  TitleSlug = "design-authentication-manager"
  Code = "class AuthenticationManager:\n\n    def __init__(self, timeToLive: int):\n        self.ttl = timeToLive\n        self.tokens = {}\n\n    def generate(self, tokenId: str, currentTime: int) -> None:\n        self.tokens[tokenId] = currentTime + self.ttl\n\n    def renew(self, tokenId: str, currentTime: int) -> None:\n        if currentTime < self.tokens.get(tokenId, currentTime):\n            self.generate(tokenId, currentTime)\n        else:\n            self.tokens.pop(tokenId, None)\n\n    def countUnexpiredTokens(self, currentTime: int) -> int:\n        count = 0\n        remove_tokens = []\n        for token, expir_time in self.tokens.items():\n            if currentTime < expir_time:\n                count += 1\n            else:\n                remove_tokens.append(token)\n        \n        for token in remove_tokens:\n            self.tokens.pop(token)\n        \n        return count\n\n\n# Your AuthenticationManager object will be instantiated and called as such:\n# obj = AuthenticationManager(timeToLive)\n# obj.generate(tokenId,currentTime)\n# obj.renew(tokenId,currentTime)\n# param_3 = obj.countUnexpiredTokens(currentTime)"
  Title = "Design Authentication Manager"
  Url = "/submissions/detail/1050849923/"
  LangName = "Python3"
  Timestamp = 1694868403
  Status = 10
  Runtime = "189 ms"
  IsPending = "Not Pending"
  Memory = "17.7 MB"
  CompareResult = "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  HasNotes = false
  FlagType = 1

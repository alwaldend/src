[[Submissions]]
  Id = 997558323
  StatusDisplay = "Accepted"
  Lang = "python3"
  QuestionId = 155
  TitleSlug = "min-stack"
  Code = "from sortedcontainers import sortedset\n\nclass MinStack:\n    class Node:\n        def __init__(self, val: int, prev: 'Node'):\n            self.val = val\n            self.prev = prev\n\n\n    def __init__(self):\n        self.stack: List[Node] = []\n        self.min_node = None\n\n    def push(self, val: int) -> None:\n        new_node = self.Node(val, None)\n        self.stack.append(new_node)\n        if self.min_node is None or val <= self.min_node.val:\n            new_node.prev = self.min_node\n            self.min_node = new_node\n\n    def pop(self) -> None:\n        pop = self.stack.pop()\n        if pop == self.min_node:\n            self.min_node = self.min_node.prev\n\n    def top(self) -> int:\n        return self.stack[-1].val\n\n    def getMin(self) -> int:\n        return self.min_node.val\n\n\n# Your MinStack object will be instantiated and called as such:\n# obj = MinStack()\n# obj.push(val)\n# obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.getMin()"
  Title = "Min Stack"
  Url = "/submissions/detail/997558323/"
  LangName = "Python3"
  Timestamp = 1689684365
  Status = 10
  Runtime = "84 ms"
  IsPending = "Not Pending"
  Memory = "21.6 MB"
  CompareResult = "1111111111111111111111111111111"
  HasNotes = false
  FlagType = 1

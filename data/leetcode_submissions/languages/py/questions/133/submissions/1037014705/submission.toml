[[Submissions]]
  Id = 1037014705
  StatusDisplay = "Accepted"
  Lang = "python3"
  QuestionId = 133
  TitleSlug = "clone-graph"
  Code = "\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val = 0, neighbors = None):\n        self.val = val\n        self.neighbors = neighbors if neighbors is not None else []\n\"\"\"\n\nclass Solution:\n    def cloneGraph(self, node: 'Node') -> 'Node':\n        old_to_new = {}\n        \n        def clone(node: Node) -> Node:\n            if node in old_to_new:\n                return old_to_new[node]\n            \n            new_node = Node(node.val)\n            old_to_new[node] = new_node\n            new_node.neighbors = [clone(neighbor) for neighbor in node.neighbors]\n\n            return new_node\n\n        return clone(node) if node else node"
  Title = "Clone Graph"
  Url = "/submissions/detail/1037014705/"
  LangName = "Python3"
  Timestamp = 1693503902
  Status = 10
  Runtime = "49 ms"
  IsPending = "Not Pending"
  Memory = "16.8 MB"
  CompareResult = "1111111111111111111111"
  HasNotes = false
  FlagType = 1

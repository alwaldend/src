load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("//bzl/rules/bzl:al_bzl_target_doc.bzl", "al_bzl_target_doc")
load("//bzl/rules/git:al_git_changelog.bzl", "al_git_changelog")
load("//bzl/rules/leetcode:al_leetcode_submissions.bzl", "al_leetcode_submissions")
load("//bzl/rules/readme:al_readme.bzl", "al_readme")

_LANGS = [
    "cpp",
    "go",
    "java",
    "py",
    "sh",
    "sql",
]

al_readme(
    name = "readme",
    visibility = ["//visibility:public"],
)

al_git_changelog(
    name = "changelog",
    visibility = ["//visibility:public"],
)

[
    [
        al_leetcode_submissions(
            name = "leetcode_submissions.{}".format(lang),
            srcs = glob(["languages/{}/questions/*/submissions/*/submission.toml".format(lang)]),
            package_dir = "{}/leetcode_submissions".format(lang),
        ),
        write_file(
            name = "leetcode_submissions.{}_index".format(lang),
            out = "leetcode_submissions.{}_index.md".format(lang),
            content = [
                "---",
                "title: Leetcode submissions",
                "---",
            ],
        ),
    ]
    for lang in _LANGS
]

pkg_tar(
    name = "leetcode_submissions",
    srcs = ["leetcode_submissions.{}_index".format(lang) for lang in _LANGS],
    remap_paths = {
        "/leetcode_submissions.{}_index.md".format(lang): "{}/leetcode_submissions/_index.md".format(lang)
        for lang in _LANGS
    },
    visibility = ["//visibility:public"],
    deps = ["leetcode_submissions.{}".format(lang) for lang in _LANGS],
)

al_bzl_target_doc(
    name = "bazel_target_doc",
    visibility = ["//visibility:public"],
)

load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("//bzl/macros:al_gen_changelog.bzl", "al_gen_changelog")
load("//bzl/macros:al_readme.bzl", "al_readme")
load("//bzl/rules/bzl:al_bzl_target_doc.bzl", "al_bzl_target_doc")
load("//bzl/rules/drawio:al_drawio_run_binary.bzl", "al_drawio_run_binary")

_DIAGRAMS = {
    "arch-idea-anki-chinese-flashcards-enricher": {},
    "arch-idea-twitch-auto-clipper": {},
    "arch-interview-yandex-sre": {},
}

al_readme(
    name = "readme",
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "docs",
    package_dir = package_name(),
    visibility = ["//visibility:public"],
    deps = ["{}-doc".format(diagram) for diagram, _ in _DIAGRAMS.items()],
)

[
    [
        pkg_tar(
            name = "{}-doc".format(diagram),
            srcs = [
                "{}-md".format(diagram),
                "{}-svg".format(diagram),
            ],
            remap_paths = {
                "/{}.md".format(diagram): "{}/_index.md".format(diagram),
                "/{}.svg".format(diagram): "{}/diagram.svg".format(diagram),
            },
        ),
        write_file(
            name = "{}-md".format(diagram),
            out = "{}.md".format(diagram),
            content = [
                "---",
                "title: {}".format(diagram),
                "tags: [generated]",
                "---",
                "{{< svg_file file=diagram.svg >}}",
            ],
        ),
        al_drawio_run_binary(
            name = "{}-svg".format(diagram),
            srcs = ["{}.drawio".format(diagram)],
            out = "{}.svg".format(diagram),
            arguments = [
                "$(execpath :{}.drawio)".format(diagram),
                "--crop",
                "--export",
                "--embed-diagram",
                "--format",
                "svg",
                "--output",
                "$(execpath :{}.svg)".format(diagram),
            ],
        ),
    ]
    for diagram, _ in _DIAGRAMS.items()
]

al_gen_changelog(
    name = "changelog",
    visibility = ["//visibility:public"],
)

al_bzl_target_doc(
    name = "bazel_target_doc",
    visibility = ["//visibility:public"],
)

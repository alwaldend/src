{
    "id": 1096509677,
    "status_display": "Accepted",
    "lang": "cpp",
    "question_id": 2678,
    "title_slug": "design-graph-with-shortest-path-calculator",
    "code": "class Graph {\npublic:\n    vector\u003cvector\u003cpair\u003cint, int\u003e\u003e\u003e adjList;\n    Graph(int n, vector\u003cvector\u003cint\u003e\u003e\u0026 edges) {\n        adjList.resize(n);\n        for (auto\u0026 e: edges)\n            adjList[e[0]].push_back(make_pair(e[1], e[2]));\n    }\n\n    void addEdge(vector\u003cint\u003e edge) {\n        adjList[edge[0]].push_back(make_pair(edge[1], edge[2]));\n    }\n\n    int shortestPath(int node1, int node2) {\n        int n = adjList.size();\n        priority_queue\u003cvector\u003cint\u003e, vector\u003cvector\u003cint\u003e\u003e, greater\u003cvector\u003cint\u003e\u003e\u003e pq;\n        vector\u003cint\u003e costForNode(n, INT_MAX);\n        costForNode[node1] = 0;\n        pq.push({0, node1});\n\n        while (!pq.empty()) {\n            int currCost = pq.top()[0];\n            int currNode = pq.top()[1];\n            pq.pop();\n\n            if (currCost \u003e costForNode[currNode]) {\n                continue;\n            }\n            if (currNode == node2) {\n                return currCost;\n            }\n            for (auto\u0026 neighbor : adjList[currNode]) {\n                int neighborNode = neighbor.first;\n                int cost = neighbor.second;\n                int newCost = currCost + cost;\n\n                if (newCost \u003c costForNode[neighborNode]) {\n                    costForNode[neighborNode] = newCost;\n                    pq.push({newCost, neighborNode});\n                }\n            }\n        }\n        return -1;\n    }\n};",
    "title": "Design Graph With Shortest Path Calculator",
    "url": "/submissions/detail/1096509677/",
    "lang_name": "C++",
    "time": "1 year, 6 months",
    "timestamp": 1699703469,
    "status": 10,
    "runtime": "344 ms",
    "is_pending": "Not Pending",
    "memory": "113 MB",
    "compare_result": "111111111111111111111111111111111111",
    "flag_type": 1
}
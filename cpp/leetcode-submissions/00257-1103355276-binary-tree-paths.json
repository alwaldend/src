{
    "id": 1103355276,
    "status_display": "Accepted",
    "lang": "cpp",
    "question_id": 257,
    "title_slug": "binary-tree-paths",
    "code": "/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector\u003cstring\u003e binaryTreePaths(TreeNode* root) {\n        vector\u003cstring\u003e ans;\n        dfs(*root, ans, \"\");\n        return ans;\n    }\n\n    void dfs(TreeNode\u0026 root, vector\u003cstring\u003e \u0026ans, string path){\n        path += (path.size() ? \"-\u003e\" : \"\") + std::to_string(root.val);\n        if(!root.left \u0026\u0026 !root.right) {\n            ans.push_back(path);\n            return;\n        }\n        if(root.left) {\n            dfs(*root.left, ans, path);\n        }\n        if(root.right) {\n            dfs(*root.right, ans, path);\n        }\n    }\n};",
    "title": "Binary Tree Paths",
    "url": "/submissions/detail/1103355276/",
    "lang_name": "C++",
    "time": "1 year, 5 months",
    "timestamp": 1700560281,
    "status": 10,
    "runtime": "0 ms",
    "is_pending": "Not Pending",
    "memory": "13.9 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
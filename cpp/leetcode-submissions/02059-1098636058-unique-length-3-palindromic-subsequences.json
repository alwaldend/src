{
    "id": 1098636058,
    "status_display": "Accepted",
    "lang": "cpp",
    "question_id": 2059,
    "title_slug": "unique-length-3-palindromic-subsequences",
    "code": "class Solution {\npublic:\n    int countPalindromicSubsequence(string s) {\n        unordered_set\u003cchar\u003e letters;\n        for (char c : s) {\n            letters.insert(c);\n        }\n        int ans = 0;\n        for (char letter : letters) {\n            int i = -1;\n            int j = 0;\n            for (int k = 0; k \u003c s.size(); k++) {\n                if (s[k] == letter) {\n                    if (i == -1) {\n                        i = k;\n                    }\n                    \n                    j = k;\n                }\n            }\n            unordered_set\u003cchar\u003e between;\n            for (int k = i + 1; k \u003c j; k++) {\n                between.insert(s[k]);\n            }\n            \n            ans += between.size();\n        }\n        return ans;\n    }\n};\n\n",
    "title": "Unique Length-3 Palindromic Subsequences",
    "url": "/submissions/detail/1098636058/",
    "lang_name": "C++",
    "time": "1 year, 5 months",
    "timestamp": 1699965569,
    "status": 10,
    "runtime": "278 ms",
    "is_pending": "Not Pending",
    "memory": "13.3 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
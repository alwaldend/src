{
    "id": 1107276458,
    "status_display": "Accepted",
    "lang": "cpp",
    "question_id": 972,
    "title_slug": "knight-dialer",
    "code": "class Solution {\npublic:\n    vector\u003cvector\u003cint\u003e\u003e memo;\n    int n;\n    int MOD = 1e9 + 7;\n    vector\u003cvector\u003cint\u003e\u003e jumps = {\n        {4, 6},\n        {6, 8},\n        {7, 9},\n        {4, 8},\n        {3, 9, 0},\n        {},\n        {1, 7, 0},\n        {2, 6},\n        {1, 3},\n        {2, 4}\n    };\n    \n    int dp(int remain, int square) {\n        if (remain == 0) {\n            return 1;\n        }\n        \n        if (memo[remain][square] != 0) {\n            return memo[remain][square];\n        }\n        \n        int ans = 0;\n        for (int nextSquare : jumps[square]) {\n            ans = (ans + dp(remain - 1, nextSquare)) % MOD;\n        }\n        \n        memo[remain][square] = ans;\n        return ans;\n    }\n    \n    int knightDialer(int n) {\n        this-\u003en = n;\n        memo = vector(n + 1, vector(10, 0));\n        int ans = 0;\n        for (int square = 0; square \u003c 10; square++) {\n            ans = (ans + dp(n - 1, square)) % MOD;\n        }\n        \n        return ans;\n    }\n};",
    "title": "Knight Dialer",
    "url": "/submissions/detail/1107276458/",
    "lang_name": "C++",
    "time": "1 year, 8 months",
    "timestamp": 1701070333,
    "status": 10,
    "runtime": "160 ms",
    "is_pending": "Not Pending",
    "memory": "39.4 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
{
    "id": 1097265019,
    "status_display": "Accepted",
    "lang": "cpp",
    "question_id": 643,
    "title_slug": "maximum-average-subarray-i",
    "code": "class Solution {\npublic:\n    double findMaxAverage(vector\u003cint\u003e\u0026 nums, int k) {\n        int length = nums.size();\n        double sum = std::accumulate(nums.begin(), nums.begin() + k , 0);\n        double maxSum = sum;\n        for (int i = k; i \u003c length; ++i) {\n            sum += nums[i] - nums[i-k];\n            maxSum = max(sum, maxSum);\n        }\n        return maxSum / k;\n    }\n};",
    "title": "Maximum Average Subarray I",
    "url": "/submissions/detail/1097265019/",
    "lang_name": "C++",
    "time": "1 year, 8 months",
    "timestamp": 1699797622,
    "status": 10,
    "runtime": "144 ms",
    "is_pending": "Not Pending",
    "memory": "109.9 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
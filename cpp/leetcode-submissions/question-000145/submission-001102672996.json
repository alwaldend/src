{
    "id": 1102672996,
    "status_display": "Accepted",
    "lang": "cpp",
    "question_id": 145,
    "title_slug": "binary-tree-postorder-traversal",
    "code": "/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector\u003cint\u003e postorderTraversal(TreeNode* root) {\n        if (root == nullptr) {\n            return {};\n        }\n        std::vector\u003cint\u003e ans{};\n        addNodes(root, ans);\n        return ans;\n    }\n\n    void addNodes(TreeNode* node, std::vector\u003cint\u003e\u0026 ans) {\n        auto left{node-\u003eleft}, right{node-\u003eright};\n        if (left != nullptr) {\n            addNodes(left, ans);\n        }\n        if (right != nullptr) {\n            addNodes(right, ans);\n        }\n        ans.push_back(node-\u003eval);\n    }\n};",
    "title": "Binary Tree Postorder Traversal",
    "url": "/submissions/detail/1102672996/",
    "lang_name": "C++",
    "time": "1 year, 8 months",
    "timestamp": 1700480320,
    "status": 10,
    "runtime": "2 ms",
    "is_pending": "Not Pending",
    "memory": "8.9 MB",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
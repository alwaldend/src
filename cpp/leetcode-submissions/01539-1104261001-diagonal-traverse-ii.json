{
    "id": 1104261001,
    "status_display": "Accepted",
    "lang": "cpp",
    "question_id": 1539,
    "title_slug": "diagonal-traverse-ii",
    "code": "class Solution {\npublic:\n    vector\u003cint\u003e findDiagonalOrder(vector\u003cvector\u003cint\u003e\u003e\u0026 nums) {\n        unordered_map\u003cint, vector\u003cint\u003e\u003e groups;\n        for (int row = nums.size() - 1; row \u003e= 0; row--) {\n            for (int col = 0; col \u003c nums[row].size(); col++) {\n                int diagonal = row + col;\n                groups[diagonal].push_back(nums[row][col]);\n            }\n        }\n        \n        vector\u003cint\u003e ans;\n        int curr = 0;\n        \n        while (groups.find(curr) != groups.end()) {\n            for (int num : groups[curr]) {\n                ans.push_back(num);\n            }\n            \n            curr++;\n        }\n        \n        return ans;\n    }\n};\n",
    "title": "Diagonal Traverse II",
    "url": "/submissions/detail/1104261001/",
    "lang_name": "C++",
    "time": "1 year, 5 months",
    "timestamp": 1700668142,
    "status": 10,
    "runtime": "212 ms",
    "is_pending": "Not Pending",
    "memory": "97.6 MB",
    "compare_result": "11111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
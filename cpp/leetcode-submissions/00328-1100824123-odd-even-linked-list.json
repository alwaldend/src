{
    "id": 1100824123,
    "status_display": "Accepted",
    "lang": "cpp",
    "question_id": 328,
    "title_slug": "odd-even-linked-list",
    "code": "/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        if(!head || !head-\u003enext || !head-\u003enext-\u003enext) {\n            return head;\n        } \n        \n        ListNode* odd {head};\n        ListNode* even {head-\u003enext};\n        ListNode* even_start {head-\u003enext};\n        \n        while(odd-\u003enext \u0026\u0026 even-\u003enext) {\n            ListNode* next {even-\u003enext}; \n            odd-\u003enext = next;\n            even-\u003enext = next-\u003enext;\n            odd = odd-\u003enext;\n            even = even-\u003enext;\n        }\n        odd-\u003enext = even_start;\n        return head; \n    }\n};",
    "title": "Odd Even Linked List",
    "url": "/submissions/detail/1100824123/",
    "lang_name": "C++",
    "time": "1 year, 5 months",
    "timestamp": 1700231122,
    "status": 10,
    "runtime": "8 ms",
    "is_pending": "Not Pending",
    "memory": "10.9 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
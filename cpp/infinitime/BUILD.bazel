load("@aspect_rules_js//js:defs.bzl", "js_binary", "js_run_binary")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@bazel_skylib//rules/directory:directory.bzl", "directory")
load("@infinitime-mcuboot-venv//:requirements.bzl", "all_requirements")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")
load("//bazel/utils:utils.bzl", "pkg_tar_combined", "py_binary_shell")

compile_pip_requirements(
    name = "mcuboot-requirements",
    src = "@infinitime-mcuboot//:scripts/requirements.txt",
    requirements_txt = "mcuboot-requirements-lock.txt",
)

py_binary_shell(
    name = "mcuboot-python-shell",
    shell_type = "bash",
    deps = all_requirements,
)

pkg_tar_combined(
    name = "firmware-deps",
    tars = [
        {
            "label": "@infinitime//:src-tar",
            "dir": "src",
        },
        {
            "label": "@infinitime-gcc//:src-tar",
            "dir": "gcc",
        },
        {
            "label": "@infinitime-nrfsdk//:src-tar",
            "dir": "nrfsdk",
        },
    ],
)

genrule(
    name = "firmware",
    srcs = [
        ":firmware-deps",
        "//:node-modules/lv_font_conv/dir",
    ],
    outs = ["build/*.zip"],
    cmd = """
        set -euxo pipefail
	build_type="Release" 
	build_dir="$${PWD}/build"
	bin_dir="$${PWD}/bin"
	deps_dir="$${PWD}/deps"
	"$${PWD}/$(location :mcuboot-python-shell)" which python3
	$(location :mcuboot-python-shell) python3 -c "import cbor2"

	export PATH="$${bin_dir}:$$(realpath $$(dirname $(NODE_PATH))):$${PATH}"
	mkdir -p "$${bin_dir}" "$${build_dir}" "$${deps_dir}"
        ln -s "$$(realpath $(location //:node_modules/lv_font_conv/dir)/lv_font_conv.js)" "$${bin_dir}/lv_font_conv"
	tar -xf $(location :firmware-deps) -C "$${deps_dir}"
	$(location :mcuboot-python-shell) $(CMAKE) \
            -G "Unix Makefiles" \
            -S "$${deps_dir}/src" \
            -B "$${build_dir}" \
            -DCMAKE_BUILD_TYPE="$${build_type}" \
            -DARM_NONE_EABI_TOOLCHAIN_PATH="$${deps_dir}/gcc" \
            -DNRF5_SDK_PATH="$${deps_dir}/nrfsdk" \
            -DBUILD_DFU=1 \
            -DBUILD_RESOURCES=1  
	$(location :mcuboot-python-shell) $(CMAKE) \
            --build "$${build_dir}" \
            --config "$${build_type}"
    """,
    toolchains = [
        "@rules_foreign_cc//toolchains:current_cmake_toolchain",
        "@nodejs_toolchains//:resolved_toolchain",
        "@rules_python//python:current_py_toolchain",
    ],
    tools = [":mcuboot-python-shell"],
)

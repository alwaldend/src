module(
    name = "com_alwaldend_src",
    version = "0.0.0",
    bazel_compatibility = [">=8.0.0"],
    compatibility_level = 0,
)

# Bzl
bazel_dep(name = "stardoc", version = "0.8.0")
bazel_dep(name = "bazel_skylib", version = "1.8.2")
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "rules_license", version = "1.0.0")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "aspect_bazel_lib", version = "2.21.2")
bazel_dep(name = "aspect_rules_lint", version = "1.10.2")
bazel_dep(name = "bazel_worker_java", version = "0.0.6")

# Python
bazel_dep(name = "rules_python", version = "1.6.3")
bazel_dep(name = "rules_python_gazelle_plugin", version = "1.6.3")

# Proto
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "protobuf", version = "31.1")

# Shell
bazel_dep(name = "rules_sh", version = "0.5.0")
bazel_dep(name = "rules_shell", version = "0.6.1")

# Golang
bazel_dep(name = "rules_go", version = "0.57.0")
bazel_dep(name = "gazelle", version = "0.45.0")

# Perl
bazel_dep(name = "rules_perl", version = "0.4.3")

# Javascript
bazel_dep(name = "rules_nodejs", version = "6.5.0")
bazel_dep(name = "aspect_rules_js", version = "2.6.2")

# Rust
bazel_dep(name = "rules_rust", version = "0.66.0")

# Java
bazel_dep(name = "rules_java", version = "8.6.1")
bazel_dep(name = "contrib_rules_jvm", version = "0.30.0")
bazel_dep(name = "rules_jvm_external", version = "6.7")

# C, C++
bazel_dep(name = "rules_cc", version = "0.2.11")
bazel_dep(name = "rules_foreign_cc", version = "0.15.1")
bazel_dep(name = "toolchains_llvm", version = "1.5.0")
bazel_dep(name = "com_nordicsemi_developer_nrfsdk", version = "15.3.0")
bazel_dep(name = "org_openssl_openssl", version = "3.5.0")
bazel_dep(name = "us_nasm_nasm", version = "2.15.05")
bazel_dep(name = "hedron_compile_commands", version = "abb61a688167623088f8768cc9264798df6a9d10")

# Kotlin
bazel_dep(name = "rules_kotlin", version = "2.1.9")

# Andoird
bazel_dep(name = "rules_android", version = "0.6.6")
bazel_dep(name = "rules_android_ndk", version = "0.1.3")
bazel_dep(name = "rules_robolectric", version = "4.16")

# Oci
bazel_dep(name = "rules_oci", version = "2.2.6")

# Hashell
bazel_dep(name = "rules_haskell", version = "7bb6b0790b0c44603173196e1b4d1cd6e5f28078")

# Tools
bazel_dep(name = "com_github_georgewfraser_java_language_server", version = "2025.520.0")

## Overrides

# local_path_override(
#     module_name = "rules_haskell",
#     path = "../fork_com_github_tweag_rules_haskell",
# )

## Includes

include("//tools:deps.MODULE.bazel")
include("//py:deps.MODULE.bazel")
include("//hugo:deps.MODULE.bazel")
include("//drawio:deps.MODULE.bazel")
include("//infra/helm:deps.MODULE.bazel")
include("//infra/ansible:deps.MODULE.bazel")
include("//projects/android_launcher:deps.MODULE.bazel")
include("//projects/nexus_security_plugin:deps.MODULE.bazel")

## Toolchains

# Hashell

haskell_toolchains = use_extension(
    "@rules_haskell//extensions:haskell_toolchains.bzl",
    "haskell_toolchains",
)
haskell_toolchains.bindists(
    dist = {
        "linux_amd64": "deb12",
    },
    version = "9.12.2",
    # https://gitlab.haskell.org/ghc/ghc/-/wikis/GHC%20Status#all-released-ghc-versions
    # https://www.haskell.org/ghc/download_ghc_9_12_2.html#binaries
)
use_repo(
    haskell_toolchains,
    "all_bindist_toolchains",
)

register_toolchains(
    "@all_bindist_toolchains//:all",
)

# CC

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_version = "21.1.0",
)
use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")

# Perl

perl_repositories = use_extension("@rules_perl//perl:extensions.bzl", "perl_repositories")

register_toolchains(
    "@rules_perl//perl:perl_darwin_arm64_toolchain",
    "@rules_perl//perl:perl_darwin_amd64_toolchain",
    "@rules_perl//perl:perl_linux_amd64_toolchain",
    "@rules_perl//perl:perl_linux_arm64_toolchain",
    "@rules_perl//perl:perl_windows_x86_64_toolchain",
)

use_repo(
    perl_repositories,
    "perl_darwin_amd64",
    "perl_darwin_arm64",
    "perl_linux_amd64",
    "perl_linux_arm64",
    "perl_windows_x86_64",
)

# Kotlin
rules_kotlin_extensions = use_extension("@rules_kotlin//src/main/starlark/core/repositories:bzlmod_setup.bzl", "rules_kotlin_extensions")
rules_kotlin_extensions.kotlinc_version(
    sha256 = "1ba08a8b45da99339a0601134cc037b54cf85e9bc0edbe76dcbd27c2d684a977",
    version = "2.1.21",
)
rules_kotlin_extensions.ksp_version(
    sha256 = "44e965bb067b2bb5cd9184dab2c3dea6e3eab747d341c07645bb4c88f09e49c8",
    version = "2.1.21-2.0.1",
)
use_repo(
    rules_kotlin_extensions,
    "com_github_google_ksp",
    "com_github_jetbrains_kotlin",
    "com_github_jetbrains_kotlin_git",
    "com_github_pinterest_ktlint",
    "kotlinx_serialization_core_jvm",
    "kotlinx_serialization_json",
    "kotlinx_serialization_json_jvm",
)

register_toolchains("//tools/bzl/configs:kotlin_toolchain")

# Android
remote_android_extensions = use_extension(
    "@rules_android//bzlmod_extensions:android_extensions.bzl",
    "remote_android_tools_extensions",
)
use_repo(remote_android_extensions, "android_tools")

android_sdk_repository_extension = use_extension("@rules_android//rules/android_sdk_repository:rule.bzl", "android_sdk_repository_extension")
android_sdk_repository_extension.configure(
    api_level = 36,
    build_tools_version = "36.0.0",
)
use_repo(android_sdk_repository_extension, "androidsdk")

register_toolchains("@androidsdk//:sdk-toolchain", "@androidsdk//:all")

android_ndk_repository_extension = use_extension("@rules_android_ndk//:extension.bzl", "android_ndk_repository_extension")
android_ndk_repository_extension.configure(
    api_level = 29,
)
use_repo(android_ndk_repository_extension, "androidndk")

register_toolchains("@androidndk//:all")

# Go

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(
    version = "1.25.1",
)
go_sdk.from_file(go_mod = "//:go.mod")

go_deps_mod = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps_mod.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps_mod,
    "com_github_burntsushi_toml",
    "com_github_goccy_go_yaml",
    "com_github_spf13_cobra",
    "org_golang_google_protobuf",
)

# Js
node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(
    name = "com_alwaldend_src_nodejs_toolchains",
    node_version = "16.14.2",
)
use_repo(node, com_alwaldend_src_nodejs_toolchains = "nodejs_toolchains")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
pnpm.pnpm(
    name = "com_alwaldend_src_pnpm",
    pnpm_version = "10.18.1",
)
use_repo(pnpm, "com_alwaldend_src_pnpm")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm")
npm.npm_translate_lock(
    name = "com_alwaldend_src_npm",
    bins = {
        "typescript": [
            "tsc=./bin/tsc",
            "tsserver=./bin/tsserver",
        ],
        "lv_font_conv": ["lv_font_conv=./lv_font_conv.js"],
        "prettier": ["prettier=./bin/prettier.cjs"],
        "postcss-cli": ["postcss=./index.js"],
    },
    data = [
        "//:pnpm-workspace.yaml",
    ],
    pnpm_lock = "//:pnpm-lock.yaml",
    public_hoist_packages = {
        "autoprefixer": [
            "",
        ],
    },
    run_lifecycle_hooks = False,
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "com_alwaldend_src_npm")

# Qt

register_toolchains("//bzl/rules/qt:toolchain_local_linux_gcc_64")

# Git
al_git_repo = use_repo_rule("//bzl/rules/git:al_git_repo.bzl", "al_git_repo")

al_git_repo(
    name = "git",
)

register_toolchains("//bzl/rules/git:toolchain_local")

# Shellcheck

register_toolchains("//tools/shellcheck:toolchain_remote_linux_x86_64")

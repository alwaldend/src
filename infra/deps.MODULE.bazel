http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_file = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")

## Helm

al_repo_map = use_extension("//tools/repo_map:al_repo_map.bzl", "al_repo_map")
al_repo_map.download(
    name = "com_github_helm_helm",
    build_file_native_binary = {"src": "helm"},
    repos = {
        "linux_amd64": [
            "url=https://get.helm.sh/helm-v3.19.0-linux-amd64.tar.gz",
            "integrity=sha256-p/gc4IAHCRuG2L1pbrTYa40PLhufbHFL5i+C+WpZRJY=",
        ],
    },
)
use_repo(
    al_repo_map,
    "com_github_helm_helm_linux_amd64",
)

al_helm_deps = use_extension("//tools/helm:al_helm_deps.bzl", "al_helm_deps")
al_helm_deps.from_lock(
    chart_lock = "//infra/charts/rancher.dc1.alwaldend.com:Chart.lock",
    helm_lock = "//infra/charts/rancher.dc1.alwaldend.com:helm_lock.json",
)
use_repo(al_helm_deps, "com_rancher_releases_rancher")

register_toolchains("//tools/helm:toolchain_remote_linux_amd64")

## Ansible

http_archive(
    name = "com_ansible_galaxy_ansible_posix_v2",
    build_file = "//tools/bzl/build_files:general.BUILD.bazel",
    integrity = "sha256-X/Iyz2lJKpkfKgmQ27I+8lpgC36SCd5uMzd6b/CKiik=",
    url = "https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/ansible-posix-2.1.0.tar.gz",
)

http_archive(
    name = "com_ansible_galaxy_community_general_v11",
    build_file = "//tools/bzl/build_files:general.BUILD.bazel",
    integrity = "sha256-0PTb0Hnwx9jYIMYYvF/IinsPZV9Wu+7xl6zTNjOQN0Y=",
    url = "https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/community-general-11.3.0.tar.gz",
)

http_archive(
    name = "com_ansible_galaxy_community_crypto_v3",
    build_file = "//tools/bzl/build_files:general.BUILD.bazel",
    integrity = "sha256-Cbj+kPoHhmn9bHK2YeO1TKbUqYBTteA9PWawUpy+mZ4=",
    url = "https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/community-crypto-3.0.4.tar.gz",
)

http_archive(
    name = "com_ansible_galaxy_community_docker_v4",
    build_file = "//tools/bzl/build_files:general.BUILD.bazel",
    integrity = "sha256-aW1lQhLLOCJLpKY4yJCwHLZ9WT5LSICx5BpVrepZtS4=",
    url = "https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/community-docker-4.8.0.tar.gz",
)

http_archive(
    name = "com_ansible_galaxy_community_library_inventory_filtering_v1",
    build_file = "//tools/bzl/build_files:general.BUILD.bazel",
    integrity = "sha256-0DT0O89NQ7TPqHmBpiom8yi+dZjbO2z60bkKLVZmVRw=",
    url = "https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/community-library_inventory_filtering_v1-1.1.3.tar.gz",
)

http_archive(
    name = "com_ansible_galaxy_devsec_hardening_v10",
    build_file = "//tools/bzl/build_files:general.BUILD.bazel",
    integrity = "sha256-sd44WSmHlZIA/g28CO/CbPkzrNfb8IA081y+ofk58+k=",
    url = "https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/devsec-hardening-10.3.1.tar.gz",
)

http_file(
    name = "com_github_k3s_io_k3s_install_script",
    downloaded_file_path = "install",
    executable = True,
    integrity = "sha256-CP/ZLEeohu3VbOl3NPPWfn9hFfByldzc3G336iwL7ho=",
    url = "https://raw.githubusercontent.com/k3s-io/k3s/ef6d6f4c363f30f2b7d296c94d50912663cb20ec/install.sh",
)

{
    "id": 1088466442,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 98,
    "title_slug": "validate-binary-search-tree",
    "code": "/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\ntype queueItem struct  {\n    node *TreeNode\n    max *int\n    min *int\n}\n\nfunc isValidBST(root *TreeNode) bool {\n    queue := []queueItem{queueItem{root, nil, nil}}\n    for length := len(queue); length \u003e 0; length = len(queue) {\n        for i := 0; i \u003c length; i++ {\n            item := queue[i]\n            if item.node == nil {\n                continue\n            }\n            node := item.node\n            if (item.max != nil \u0026\u0026 node.Val \u003e= *item.max) || (item.min != nil \u0026\u0026 node.Val \u003c= *item.min) {\n                return false\n            }\n            queue = append(\n                queue, \n                queueItem{node.Left, \u0026node.Val, item.min}, \n                queueItem{node.Right, item.max, \u0026node.Val},\n            )\n        }\n        queue = queue[length:]\n    }\n    return true\n}",
    "title": "Validate Binary Search Tree",
    "url": "/submissions/detail/1088466442/",
    "lang_name": "Go",
    "time": "1 year, 6 months",
    "timestamp": 1698768725,
    "status": 10,
    "runtime": "9 ms",
    "is_pending": "Not Pending",
    "memory": "6.4 MB",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
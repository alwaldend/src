{
    "id": 691571728,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 53,
    "title_slug": "maximum-subarray",
    "code": "\nfunc maxSubArray(numbers []int) int {\n\tlength := len(numbers)\n\tswitch length {\n\tcase 0:\n\t\treturn 0\n\tcase 1:\n\t\treturn numbers[0]\n\t}\n\tmaxCurrent, maxOverall := 0, math.MinInt\n\tfor _, number := range numbers {\n\t\tmaxCurrent += number\n\t\tif maxCurrent \u003e maxOverall {\n\t\t\tmaxOverall = maxCurrent\n\t\t}\n\t\tif maxCurrent \u003c 0 {\n\t\t\tmaxCurrent = 0\n\t\t}\n\t}\n\treturn maxOverall\n}",
    "title": "Maximum Subarray",
    "url": "/submissions/detail/691571728/",
    "lang_name": "Go",
    "time": "3Â years",
    "timestamp": 1651492725,
    "status": 10,
    "runtime": "123 ms",
    "is_pending": "Not Pending",
    "memory": "9.5 MB",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
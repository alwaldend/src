NODE_VERSION = "16.14.2"

PNPM_VERSION = "10.18.1"

bazel_dep(name = "rules_nodejs", version = "6.5.0")
bazel_dep(name = "aspect_rules_js", version = "2.6.2")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
pnpm.pnpm(
    name = "com_alwaldend_src_pnpm",
    pnpm_version = PNPM_VERSION,
)

node.toolchain(
    name = "com_alwaldend_src_nodejs_toolchains",
    node_version = NODE_VERSION,
)

npm.npm_translate_lock(
    name = "com_alwaldend_src_npm",
    bins = {
        "typescript": [
            "tsc=./bin/tsc",
            "tsserver=./bin/tsserver",
        ],
        "lv_font_conv": ["lv_font_conv=./lv_font_conv.js"],
        "prettier": ["prettier=./bin/prettier.cjs"],
        "postcss-cli": ["postcss=./index.js"],
    },
    data = [
        "//:package.json",
        "//:pnpm-workspace.yaml",
        "//js/tools:package.json",
    ],
    pnpm_lock = "//:pnpm-lock.yaml",
    # public_hoist_packages = {
    #     "postcss": [
    #         "js/tools",
    #         "",
    #     ],
    #     "postcss-cli": [
    #         "js/tools",
    #         "",
    #     ],
    #     "autoprefixer": [
    #         "js/tools",
    #         "",
    #     ],
    # },
    run_lifecycle_hooks = False,
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "com_alwaldend_src_npm")

use_repo(pnpm, "com_alwaldend_src_pnpm")

use_repo(node, **{"com_alwaldend_src_nodejs_toolchains": "nodejs_toolchains"})

{
    "id": 1165825513,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 1121,
    "title_slug": "partition-array-for-maximum-sum",
    "code": "class Solution:\n    def maxSumAfterPartitioning(self, arr: List[int], k: int) -\u003e int:\n        min_num = -1\n        length = len(arr)\n        last_idx = length - 1\n        cache = [-1] * length\n\n        def dp(start: int) -\u003e int:\n            cached = cache[start]\n            if cached != -1:\n                return cached\n            max_num = min_num\n            max_sum = 0\n            for i in range(start, min(start + k, length)):\n                max_num = max(max_num, arr[i])\n                cur_sum = max_num * (i - start + 1)\n                if i != last_idx:\n                    cur_sum += dp(i + 1)\n                max_sum = max(max_sum, cur_sum)\n            cache[start] = max_sum\n            return max_sum\n        \n        return dp(0)\n            ",
    "title": "Partition Array for Maximum Sum",
    "url": "/submissions/detail/1165825513/",
    "lang_name": "Python3",
    "time": "1 year, 5 months",
    "timestamp": 1707050287,
    "status": 10,
    "runtime": "387 ms",
    "is_pending": "Not Pending",
    "memory": "17.6 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
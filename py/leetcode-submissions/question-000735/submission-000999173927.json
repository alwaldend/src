{
    "id": 999173927,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 735,
    "title_slug": "asteroid-collision",
    "code": "class Solution:\n    def asteroidCollision(self, asteroids: List[int]) -\u003e List[int]:\n        length = len(asteroids)\n\n        if length \u003c 2:\n            return asteroids\n\n        stack = [asteroids[0]]\n        for i in range(1, length):\n            asteroid = asteroids[i]\n            asteroid_last = stack[-1] if stack else 0\n            stack.append(asteroid)\n\n            if asteroid \u003e 0 or (\n                asteroid \u003c 0 and asteroid_last \u003c 0\n            ):\n                continue\n\n            while len(stack) \u003e= 2 and stack[-1] \u003c 0 and stack[-2] \u003e 0:\n                last, prev = abs(stack[-1]), abs(stack[-2])\n                if last == prev:\n                    stack.pop()\n                elif last \u003e prev:\n                    stack[-1], stack[-2] = stack[-2], stack[-1]\n\n                stack.pop()\n\n        return stack",
    "title": "Asteroid Collision",
    "url": "/submissions/detail/999173927/",
    "lang_name": "Python3",
    "time": "2Â years",
    "timestamp": 1689842511,
    "status": 10,
    "runtime": "117 ms",
    "is_pending": "Not Pending",
    "memory": "17.6 MB",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
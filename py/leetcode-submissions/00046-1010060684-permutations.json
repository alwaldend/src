{
    "id": 1010060684,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 46,
    "title_slug": "permutations",
    "code": "class Solution:\n    def permute(self, nums: List[int]) -\u003e List[List[int]]:\n\n        length = len(nums)\n        current = []\n        current_contains = [False] * length\n\n        def backtrack() -\u003e Generator[None, None, List[int]]:\n            if len(current) == length:\n                yield tuple(current[:])\n                return\n\n            for i in range(length):\n                if current_contains[i]:\n                    continue\n\n                current_contains[i] = True\n                current.append(nums[i])\n\n                yield from backtrack()\n\n                current_contains[i] = False\n                current.pop()\n            \n            return\n\n        return tuple(combination for combination in backtrack()) ",
    "title": "Permutations",
    "url": "/submissions/detail/1010060684/",
    "lang_name": "Python3",
    "time": "1 year, 9 months",
    "timestamp": 1690961162,
    "status": 10,
    "runtime": "50 ms",
    "is_pending": "Not Pending",
    "memory": "16.6 MB",
    "compare_result": "11111111111111111111111111",
    "flag_type": 1
}
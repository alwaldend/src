{
    "id": 1047631211,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 1470,
    "title_slug": "tweet-counts-per-frequency",
    "code": "class TweetCounts:\n\n    def __init__(self):\n        self._tweets = defaultdict(list)\n        self._chunk_ranges = {\n            \"minute\": 60, \n            \"hour\": 3600, \n            \"day\": 86400\n        }\n\n    def recordTweet(self, tweetName: str, time: int) -\u003e None:\n        self._tweets[tweetName].append(time)\n\n    def getTweetCountsPerFrequency(self, freq: str, tweetName: str, startTime: int, endTime: int) -\u003e List[int]:\n        chunk_range = self._chunk_ranges[freq]\n        chunks = [0] * (1 + (endTime - startTime) // chunk_range)\n\n        for tweet in self._tweets[tweetName]:\n            if not startTime \u003c= tweet \u003c= endTime:\n                continue\n            chunks[(tweet - startTime) // chunk_range] += 1\n        \n        return chunks\n\n\n\n\n# Your TweetCounts object will be instantiated and called as such:\n# obj = TweetCounts()\n# obj.recordTweet(tweetName,time)\n# param_2 = obj.getTweetCountsPerFrequency(freq,tweetName,startTime,endTime)",
    "title": "Tweet Counts Per Frequency",
    "url": "/submissions/detail/1047631211/",
    "lang_name": "Python3",
    "time": "1 year, 10 months",
    "timestamp": 1694536596,
    "status": 10,
    "runtime": "318 ms",
    "is_pending": "Not Pending",
    "memory": "22.2 MB",
    "compare_result": "1111111111111111111111",
    "flag_type": 1
}
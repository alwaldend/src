{
    "id": 1037758248,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 207,
    "title_slug": "course-schedule",
    "code": "class Solution:\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -\u003e bool:\n        \n        nodes = [[] for _ in range(numCourses)]\n        for target, required in prerequisites:\n            nodes[target].append(required)\n\n        visited = set()\n\n        @cache\n        def dfs(course: int) -\u003e bool:\n            if course in visited:\n                return False\n    \n            edges = nodes[course]\n            if not edges:\n                return True\n            \n            visited.add(course)\n            return all(dfs(edge) for edge in edges)\n\n        for course in range(numCourses):\n            if not dfs(course):\n                return False\n            visited.clear()\n        \n        return True",
    "title": "Course Schedule",
    "url": "/submissions/detail/1037758248/",
    "lang_name": "Python3",
    "time": "1 year, 10 months",
    "timestamp": 1693582708,
    "status": 10,
    "runtime": "110 ms",
    "is_pending": "Not Pending",
    "memory": "22.1 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
{
    "id": 1052396767,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 1463,
    "title_slug": "the-k-weakest-rows-in-a-matrix",
    "code": "class Solution:\n    def kWeakestRows(self, mat: List[List[int]], k: int) -\u003e List[int]:\n        rows_count, cols_count = len(mat), len(mat[0])\n        heap = []\n\n        for i, row in enumerate(mat):\n            count = 0\n            for j, val in enumerate(row):\n                if val == 0:\n                    count = j\n                    break\n            else:\n                count = cols_count\n        \n            heappush(heap, (count, i))\n        \n        return tuple(item[1] for item in nsmallest(k, heap))\n\n",
    "title": "The K Weakest Rows in a Matrix",
    "url": "/submissions/detail/1052396767/",
    "lang_name": "Python3",
    "time": "1 year, 10 months",
    "timestamp": 1695019673,
    "status": 10,
    "runtime": "108 ms",
    "is_pending": "Not Pending",
    "memory": "16.6 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
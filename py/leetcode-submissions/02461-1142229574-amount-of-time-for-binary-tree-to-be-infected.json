{
    "id": 1142229574,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 2461,
    "title_slug": "amount-of-time-for-binary-tree-to-be-infected",
    "code": "class Solution:\n    def amountOfTime(self, root: Optional[TreeNode], start: int) -\u003e int:\n        def dfs(node):\n            if node is None:\n                return\n            if node.left:\n                graph[node.val].append(node.left.val)\n                graph[node.left.val].append(node.val)\n            if node.right:\n                graph[node.val].append(node.right.val)\n                graph[node.right.val].append(node.val)\n            dfs(node.left)\n            dfs(node.right)\n\n        graph = defaultdict(list)\n        dfs(root)\n        visited = set()\n        queue = deque([start])\n        time = -1\n        while queue:\n            time += 1\n            for _ in range(len(queue)):\n                current_node = queue.popleft()\n                visited.add(current_node)\n                for neighbor in graph[current_node]:\n                    if neighbor not in visited:\n                        queue.append(neighbor)\n        return time",
    "title": "Amount of Time for Binary Tree to Be Infected",
    "url": "/submissions/detail/1142229574/",
    "lang_name": "Python3",
    "time": "1 year, 4 months",
    "timestamp": 1704875666,
    "status": 10,
    "runtime": "414 ms",
    "is_pending": "Not Pending",
    "memory": "63.1 MB",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
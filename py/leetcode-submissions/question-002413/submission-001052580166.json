{
    "id": 1052580166,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 2413,
    "title_slug": "smallest-number-in-infinite-set",
    "code": "class SmallestInfiniteSet:\n\n    def __init__(self):\n        self.heap, self.next_num, self.nums = [], 1, set() \n\n    def popSmallest(self) -\u003e int:\n        if self.heap:\n            val = heappop(self.heap)\n            self.nums.remove(val)\n            return val\n        self.next_num += 1\n        return self.next_num - 1\n\n    def addBack(self, num: int) -\u003e None:\n        if num in self.nums or num \u003e= self.next_num:\n            return\n        self.nums.add(num)\n        heappush(self.heap, num)\n\n\n# Your SmallestInfiniteSet object will be instantiated and called as such:\n# obj = SmallestInfiniteSet()\n# param_1 = obj.popSmallest()\n# obj.addBack(num)",
    "title": "Smallest Number in Infinite Set",
    "url": "/submissions/detail/1052580166/",
    "lang_name": "Python3",
    "time": "1 year, 10 months",
    "timestamp": 1695038425,
    "status": 10,
    "runtime": "96 ms",
    "is_pending": "Not Pending",
    "memory": "16.9 MB",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
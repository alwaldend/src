{
    "id": 1293757321,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 1605,
    "title_slug": "minimum-number-of-days-to-make-m-bouquets",
    "code": "class Solution:\n    def minDays(self, bloomDay: List[int], m: int, k: int) -\u003e int:\n        n=len(bloomDay)\n        if m*k\u003en: return -1\n\n        def f(d):\n            len, bouquet=0, 0\n            i=0\n            while i\u003cn:\n                while i\u003cn and bloomDay[i]\u003c=d:\n                    len+=1\n                    if len==k:\n                        bouquet+=1\n                        len=0\n                    i+=1\n                if i\u003cn and bloomDay[i]\u003ed: len=0\n                if bouquet\u003em: return True\n                i+=1\n            return bouquet\u003e=m\n\n        l, r = min(bloomDay), max(bloomDay)\n        while l \u003c r:\n            mid = l + (r - l) // 2\n            if f(mid):\n                r = mid\n            else:\n                l = mid + 1\n        return l\n        ",
    "title": "Minimum Number of Days to Make m Bouquets",
    "url": "/submissions/detail/1293757321/",
    "lang_name": "Python3",
    "time": "10 months, 3 weeks",
    "timestamp": 1718816371,
    "status": 10,
    "runtime": "961 ms",
    "is_pending": "Not Pending",
    "memory": "29.9 MB",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
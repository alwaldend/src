{
    "id": 1082953508,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 515,
    "title_slug": "find-largest-value-in-each-tree-row",
    "code": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def largestValues(self, root: Optional[TreeNode]) -\u003e List[int]:\n        if not root:\n            return []\n\n        largest = []\n        cur, nxt = [root], []\n        cur_val = None\n        while cur or nxt:\n            while cur:\n                node = cur.pop()\n                if cur_val is None or node.val \u003e cur_val:\n                    cur_val = node.val\n                if node.left:\n                    nxt.append(node.left)\n                if node.right:\n                    nxt.append(node.right)\n            largest.append(cur_val)\n            cur.clear()\n            cur_val = None\n            cur, nxt = nxt, cur\n        return largest",
    "title": "Find Largest Value in Each Tree Row",
    "url": "/submissions/detail/1082953508/",
    "lang_name": "Python3",
    "time": "1 year, 6 months",
    "timestamp": 1698148516,
    "status": 10,
    "runtime": "45 ms",
    "is_pending": "Not Pending",
    "memory": "18.7 MB",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
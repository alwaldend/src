{
    "id": 1715690764,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 2498,
    "title_slug": "smallest-subarrays-with-maximum-bitwise-or",
    "code": "class Solution:\n    def smallestSubarrays(self, nums: List[int]) -\u003e List[int]:\n        n = len(nums)\n        pos = [-1] * 31\n        ans = [0] * n\n        for i in range(n - 1, -1, -1):\n            j = i\n            for bit in range(31):\n                if (nums[i] \u0026 (1 \u003c\u003c bit)) == 0:\n                    if pos[bit] != -1:\n                        j = max(j, pos[bit])\n                else:\n                    pos[bit] = i\n            ans[i] = j - i + 1\n        return ans",
    "title": "Smallest Subarrays With Maximum Bitwise OR",
    "url": "/submissions/detail/1715690764/",
    "lang_name": "Python3",
    "time": "5 hours, 46 minutes",
    "timestamp": 1753786788,
    "status": 10,
    "runtime": "985 ms",
    "is_pending": "Not Pending",
    "memory": "29 MB",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
{
    "id": 1714556145,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 2170,
    "title_slug": "count-number-of-maximum-bitwise-or-subsets",
    "code": "class Solution:\n    def countMaxOrSubsets(self, nums: List[int]) -\u003e int:\n        max_or_value = 0\n        n = len(nums)\n        for num in nums:\n            max_or_value |= num\n        memo = [[-1] * (max_or_value + 1) for _ in range(n)]\n        return self._count_subsets_recursive(nums, 0, 0, max_or_value, memo)\n\n    def _count_subsets_recursive(\n        self,\n        nums: List[int],\n        index: int,\n        current_or: int,\n        target_or: int,\n        memo: List[List[int]],\n    ) -\u003e int:\n        if index == len(nums):\n            return 1 if current_or == target_or else 0\n        if memo[index][current_or] != -1:\n            return memo[index][current_or]\n        count_without = self._count_subsets_recursive(\n            nums, index + 1, current_or, target_or, memo\n        )\n        count_with = self._count_subsets_recursive(\n            nums, index + 1, current_or | nums[index], target_or, memo\n        )\n        res = count_without + count_with\n        memo[index][current_or] = res\n        return res",
    "title": "Count Number of Maximum Bitwise-OR Subsets",
    "url": "/submissions/detail/1714556145/",
    "lang_name": "Python3",
    "time": "1 day, 3 hours",
    "timestamp": 1753709134,
    "status": 10,
    "runtime": "178 ms",
    "is_pending": "Not Pending",
    "memory": "33.7 MB",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
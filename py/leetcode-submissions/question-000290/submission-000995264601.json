{
    "id": 995264601,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 290,
    "title_slug": "word-pattern",
    "code": "class Solution:\n    def wordPattern(self, pattern: str, s: str) -\u003e bool:\n        words = s.split()\n        words_length, pattern_length = len(words), len(pattern)\n\n        if words_length != pattern_length:\n            return False\n        \n        symbol_to_word = {}\n        word_to_symbol = {}\n\n        for i, symbol in enumerate(pattern):\n            word = words[i]\n            symbol_in, word_in = symbol in symbol_to_word, word in word_to_symbol\n\n            if symbol_in and word_in and symbol_to_word[symbol] == word:\n                continue\n\n            if not symbol_in and not word_in:\n                symbol_to_word[symbol] = word\n                word_to_symbol[word] = symbol\n                continue\n\n            return False\n        \n        return True\n            \n",
    "title": "Word Pattern",
    "url": "/submissions/detail/995264601/",
    "lang_name": "Python3",
    "time": "2Â years",
    "timestamp": 1689444696,
    "status": 10,
    "runtime": "57 ms",
    "is_pending": "Not Pending",
    "memory": "16.4 MB",
    "compare_result": "11111111111111111111111111111111111111111",
    "flag_type": 1
}
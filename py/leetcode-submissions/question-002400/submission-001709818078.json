{
    "id": 1709818078,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 2400,
    "title_slug": "minimum-score-after-removals-on-a-tree",
    "code": "class Solution:\n    def calc(self, part1: int, part2: int, part3: int) -\u003e int:\n        return max(part1, part2, part3) - min(part1, part2, part3)\n\n    def minimumScore(self, nums: List[int], edges: List[List[int]]) -\u003e int:\n        length = len(nums)\n        parent_to_child: list[int] = [[] for _ in range(length)]\n        for node_1, node_2 in edges:\n            parent_to_child[node_1].append(node_2)\n            parent_to_child[node_2].append(node_1)\n\n        total = 0\n        for num in nums:\n            total ^= num\n\n        res = float(\"inf\")\n\n        def dfs2(node: int, parent: int, oth: int, anc: int) -\u003e int:\n            son = nums[node]\n            for child in parent_to_child[node]:\n                if child == parent:\n                    continue\n                son ^= dfs2(child, node, oth, anc)\n            if parent == anc:\n                return son\n            nonlocal res\n            res = min(res, self.calc(oth, son, total ^ oth ^ son))\n            return son\n\n        def dfs(node: int, parent: int) -\u003e int:\n            son = nums[node]\n            for child in parent_to_child[node]:\n                if child == parent:\n                    continue\n                son ^= dfs(child, node)\n            for child in parent_to_child[node]:\n                if child == parent:\n                    dfs2(child, node, son, node)\n            return son\n\n        dfs(0, -1)\n        return res",
    "title": "Minimum Score After Removals on a Tree",
    "url": "/submissions/detail/1709818078/",
    "lang_name": "Python3",
    "time": "2 days, 1 hour",
    "timestamp": 1753368053,
    "status": 10,
    "runtime": "3065 ms",
    "is_pending": "Not Pending",
    "memory": "18.6 MB",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
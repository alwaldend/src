{
    "id": 1016005646,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 5,
    "title_slug": "longest-palindromic-substring",
    "code": "class Solution:\n    def longestPalindrome(self, s: str) -\u003e str:\n        n = len(s)\n        dp = [[False] * n for _ in range(n)]\n        ans = [0, 0]\n        \n        for i in range(n):\n            dp[i][i] = True\n        \n        for i in range(n - 1):\n            if s[i] == s[i + 1]:\n                dp[i][i + 1] = True\n                ans = [i, i + 1]\n\n        for diff in range(2, n):\n            for i in range(n - diff):\n                j = i + diff\n                if s[i] == s[j] and dp[i + 1][j - 1]:\n                    dp[i][j] = True\n                    ans = [i, j]\n\n        i, j = ans\n        return s[i:j + 1]",
    "title": "Longest Palindromic Substring",
    "url": "/submissions/detail/1016005646/",
    "lang_name": "Python3",
    "time": "1 year, 9 months",
    "timestamp": 1691524636,
    "status": 10,
    "runtime": "2105 ms",
    "is_pending": "Not Pending",
    "memory": "24.3 MB",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
{
    "id": 1009598832,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 1723,
    "title_slug": "maximum-number-of-achievable-transfer-requests",
    "code": "class Solution:\n    def maximumRequests(self, n, requests):\n        current = [0] * n\n        length = len(requests)\n        \n        def backtrack(req_index: int, count: int) -\u003e int:\n            if req_index == length:\n                return 0 if any(current) else count\n\n            req_from, req_to = requests[req_index]\n            \n            current[req_from] -= 1\n            current[req_to] += 1\n            take = backtrack(req_index + 1, count + 1)\n\n            current[req_from] += 1\n            current[req_to] -= 1\n            non_take = backtrack(req_index + 1, count)\n            \n            return max(take, non_take)\n        \n        return backtrack(0, 0)",
    "title": "Maximum Number of Achievable Transfer Requests",
    "url": "/submissions/detail/1009598832/",
    "lang_name": "Python3",
    "time": "1 year, 12 months",
    "timestamp": 1690911489,
    "status": 10,
    "runtime": "759 ms",
    "is_pending": "Not Pending",
    "memory": "16.4 MB",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
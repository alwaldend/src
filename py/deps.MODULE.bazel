PYTHON_VERSION = "3.12.11"

bazel_dep(name = "rules_python", version = "1.6.3")
bazel_dep(name = "rules_python_gazelle_plugin", version = "1.6.3")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    is_default = True,
    python_version = PYTHON_VERSION,
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "com-alwaldend-src-bzl-rules-ansible-pip",
    python_version = PYTHON_VERSION,
    requirements_lock = "//bzl/rules/ansible:requirements.txt",
)
pip.parse(
    hub_name = "com-alwaldend-src-cpp-infinitime-pip",
    python_version = PYTHON_VERSION,
    requirements_lock = "//cpp/infinitime:requirements.txt",
)
pip.parse(
    hub_name = "com-alwaldend-src-pip",
    python_version = PYTHON_VERSION,
    requirements_lock = "//py:requirements.txt",
)
pip.parse(
    hub_name = "com-alwaldend-src-starlark-bazel-qt-requirements",
    python_version = PYTHON_VERSION,
    requirements_lock = "//bzl/rules/qt:requirements.txt",
)
use_repo(
    pip,
    "com-alwaldend-src-bzl-rules-ansible-pip",
    "com-alwaldend-src-cpp-infinitime-pip",
    "com-alwaldend-src-pip",
    "com-alwaldend-src-starlark-bazel-qt-requirements",
)

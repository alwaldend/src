load("@com_alwaldend_src//bzl/rules/pkg:al_pkg_extract_dir.bzl", "al_pkg_extract_dir")
load("@rules_pkg//pkg:mappings.bzl", "REMOVE_BASE_DIRECTORY", "pkg_filegroup", "pkg_files", "strip_prefix")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("//bzl/rules/bzl:al_bzl_target_doc.bzl", "al_bzl_target_doc")
load("//bzl/rules/git:al_git_changelog.bzl", "al_git_changelog")

al_git_changelog(
    name = "changelog",
    visibility = ["//visibility:public"],
)

pkg_filegroup(
    name = "content",
    srcs = [
        ":content_src",
        ":git_source_files",
        "//:bazel_target_doc",
        "//:changelog",
        "//ansible/collections/alwaldend/main/roles:docs",
        "//bzl:libs.stardoc",
        "//cfg/vial",
        "//data/leetcode_submissions",
        "//drawio/diagrams:docs",
    ],
    prefix = "content",
    visibility = ["//visibility:public"],
)

pkg_files(
    name = "content_src",
    srcs = glob(
        ["**"],
        exclude = [
            "README.md",
            "BUILD.bazel",
        ],
    ) + [
        "//:LICENSE.txt",
    ],
    strip_prefix = strip_prefix.from_pkg(),
)

pkg_files(
    name = "git_source_files",
    srcs = [":git_source_dir"],
    renames = {":git_source_dir": REMOVE_BASE_DIRECTORY},
)

al_pkg_extract_dir(
    name = "git_source_dir",
    src = "@git//:git_source_archive",
    arguments = [
        "--transform",
        "flags=r;s|README.md|_index.md|g",
        "--exclude",
        "hugo/sites/docs/layouts/**/*.html",
    ],
)

al_bzl_target_doc(
    name = "bazel_target_doc",
    visibility = ["//visibility:public"],
)

{
    "id": 694387207,
    "status_display": "Accepted",
    "lang": "java",
    "question_id": 1320,
    "title_slug": "remove-all-adjacent-duplicates-in-string-ii",
    "code": "class Solution {\n    public String removeDuplicates(String s, int k) {\n        Stack\u003cint []\u003e Master = new Stack\u003c\u003e();\n        \n        for(char ch : s.toCharArray()){\n            if(!Master.isEmpty() \u0026\u0026 Master.peek()[0] == ch){\n                Master.peek()[1]++;\n            }\n            else Master.push(new int[]{ch, 1});\n            if(Master.peek()[1] == k) Master.pop();\n        }\n        StringBuilder sb = new StringBuilder();\n        while(!Master.isEmpty()){\n            int top[] = Master.pop();\n            while(top[1] --\u003e 0)\n                sb.append((char)top[0]);\n        }\n        return sb.reverse().toString();\n    }\n}",
    "title": "Remove All Adjacent Duplicates in String II",
    "url": "/submissions/detail/694387207/",
    "lang_name": "Java",
    "time": "3 years, 2 months",
    "timestamp": 1651854300,
    "status": 10,
    "runtime": "84 ms",
    "is_pending": "Not Pending",
    "memory": "50 MB",
    "compare_result": "11111111111111111111",
    "flag_type": 1
}
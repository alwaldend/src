load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier", "buildifier_test")
load("@gazelle//:def.bzl", "DEFAULT_LANGUAGES", "gazelle", "gazelle_binary")
load("@hedron_compile_commands//:refresh_compile_commands.bzl", "refresh_compile_commands")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("//starlark/bazel/rules:defs.bzl", "al_genrule")

BUILDIFIER_EXCLUDE = [
    "./.git/**/*",
    "bazel-*",
]

al_genrule(
    name = "check",
    outs = ["check-bin"],
    cmd = "echo check >{{ .Request.Inputs[0] }}",
)

exports_files([
    "LICENSE.txt",
    ".editorconfig",
    "pyproject.toml",
])

buildifier(
    name = "buildifier",
    exclude_patterns = BUILDIFIER_EXCLUDE,
)

buildifier_test(
    name = "buildifier-test",
    size = "small",
    exclude_patterns = BUILDIFIER_EXCLUDE,
    no_sandbox = True,
    workspace = "//:BUILD.bazel",
)

npm_link_all_packages(
    name = "node_modules",
)

# gazelle:exclude **/leetcode-submissions/*
# gazelle:java_maven_install_file maven-lock.json
# gazelle:resolve java javax.annotation @maven//:org_apache_tomcat_annotations_api
# gazelle:resolve java org.joda.time @maven//:joda_time_joda_time
# gazelle:resolve java org.joda.time.format @maven//:joda_time_joda_time
# gazelle:resolve java org.sonatype.nexus.repository.view @maven//:org_sonatype_nexus_nexus_repository
# gazelle:resolve java org.sonatype.nexus.repository.storage @maven//:org_sonatype_nexus_nexus_repository
gazelle(
    name = "gazelle",
    command = "fix",
    gazelle = ":gazelle-bin",
)

gazelle_binary(
    name = "gazelle-bin",
    languages = DEFAULT_LANGUAGES + [
        "@contrib_rules_jvm//java/gazelle",
    ],
)

refresh_compile_commands(
    name = "refresh_compile_commands",
)

genrule(
    name = "update-readme",
    outs = ["update-readme-bin"],
    cmd = """
cat - >$(@) <<EOF
    replacement=\\$$($(execpath //golang/readme-tree:readme-tree) parse -g -o markdown .)
    $(execpath //python/replace-section) -i -s README_CONTENTS -r "\\$${replacement}" README.md
EOF
    """,
    executable = True,
    tools = [
        "//golang/readme-tree",
        "//python/replace-section",
    ],
)

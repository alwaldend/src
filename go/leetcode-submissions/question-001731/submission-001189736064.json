{
    "id": 1189736064,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 1731,
    "title_slug": "even-odd-tree",
    "code": "/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc isEvenOddTree(root *TreeNode) bool {\n    q := []*TreeNode{root}\n    for i:= 0; len(q) \u003e 0; i++ {\n        var prev *TreeNode\n        for _, node := range q {\n            q = q[1:]\n\n            if i % 2 == 0 \u0026\u0026 node.Val % 2 != 1 {\n                return false\n            }\n\n            if i % 2 == 1 \u0026\u0026 node.Val % 2 != 0 {\n                return false\n            }\n\n            if prev != nil \u0026\u0026 i % 2 == 0 \u0026\u0026 prev.Val \u003e= node.Val {\n                return false\n            }\n\n            if prev != nil \u0026\u0026 i % 2 == 1 \u0026\u0026 prev.Val \u003c= node.Val {\n                return false\n            }\n           \n            prev = node\n            if node.Left != nil {\n                q = append(q, node.Left)\n            }\n\n            if node.Right != nil {\n                q = append(q, node.Right)\n            }\n        }\n    }\n    return true\n}",
    "title": "Even Odd Tree",
    "url": "/submissions/detail/1189736064/",
    "lang_name": "Go",
    "time": "1 year, 4 months",
    "timestamp": 1709217524,
    "status": 10,
    "runtime": "177 ms",
    "is_pending": "Not Pending",
    "memory": "22.7 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
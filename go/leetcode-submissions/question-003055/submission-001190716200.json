{
    "id": 1190716200,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 3055,
    "title_slug": "maximum-odd-binary-number",
    "code": "func maximumOddBinaryNumber(s string) string {\n\tl := len(s)\n\tres := make([]byte, l)\n\tindex0, index1 := l-2, l-1\n\tfor i := 0; i \u003c l; i++ {\n\t\tif s[i] == '0' {\n\t\t\tres[index0] = '0'\n\t\t\tindex0--\n\t\t} else {\n\t\t\tres[index1] = '1'\n\t\t\tindex1 = (index1 + 1) % l\n\t\t}\n\t}\n\treturn string(res)\n}\n",
    "title": "Maximum Odd Binary Number",
    "url": "/submissions/detail/1190716200/",
    "lang_name": "Go",
    "time": "1 year, 4 months",
    "timestamp": 1709306911,
    "status": 10,
    "runtime": "0 ms",
    "is_pending": "Not Pending",
    "memory": "2.6 MB",
    "compare_result
    "flag_type": 1
}
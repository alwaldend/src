{
    "id": 1234681882,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 1030,
    "title_slug": "smallest-string-starting-from-leaf",
    "code": "/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc smallestFromLeaf(root *TreeNode) string {\n\tans := \"\"\n\tvar dfs func(node *TreeNode, text string)\n\tdfs = func(node *TreeNode, text string) {\n\t\tif node == nil {\n\t\t\treturn\n\t\t}\n\t\ttext = string(rune(node.Val + 97)) + text\n\t\tif node.Right == nil \u0026\u0026 node.Left == nil {\n\t\t\tif ans == \"\" || ans \u003e text {\n\t\t\t\tans = text\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tdfs(node.Left, text)\n\t\tdfs(node.Right, text)\n\t}\n\n\tdfs(root, \"\")\n\treturn ans\n}",
    "title": "Smallest String Starting From Leaf",
    "url": "/submissions/detail/1234681882/",
    "lang_name": "Go",
    "time": "1 year, 3 months",
    "timestamp": 1713340175,
    "status": 10,
    "runtime": "5 ms",
    "is_pending": "Not Pending",
    "memory": "4.5 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
{
    "id": 1091200483,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 124,
    "title_slug": "binary-tree-maximum-path-sum",
    "code": "/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc maxPathSum(root *TreeNode) int {\n    ans := -1 \u003c\u003c 63\n    maxPath(root, \u0026ans)\n    return ans\n}\n\nfunc maxPath(root *TreeNode, ans *int) int {\n    if root == nil {\n        return 0\n    }\n    leftPathSum := maxPath(root.Left, ans)\n    rightPathSum := maxPath(root.Right, ans)\n    *ans = max(*ans, leftPathSum + rightPathSum + root.Val)\n    return max(max(leftPathSum+root.Val, rightPathSum+root.Val), 0)\n}\n\nfunc max(a int, b int) int {\n    if (a \u003e= b) {\n        return a\n    }\n    return b\n}\n",
    "title": "Binary Tree Maximum Path Sum",
    "url": "/submissions/detail/1091200483/",
    "lang_name": "Go",
    "time": "1 year, 6 months",
    "timestamp": 1699093668,
    "status": 10,
    "runtime": "11 ms",
    "is_pending": "Not Pending",
    "memory": "8.3 MB",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
{
    "id": 689740949,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 14,
    "title_slug": "longest-common-prefix",
    "code": "\nfunc substrings(input string) map[string]bool {\n\tresults := make(map[string]bool)\n\tfor index := range input {\n\t\tresults[input[0:index+1]] = true\n\t}\n\treturn results\n}\n\nfunc string_in_maps(\n\tsource map[string]bool,\n\ttarget map[string]bool,\n\tresults map[string]bool) {\n\tfor string := range source {\n\t\tis_valid, exists_in_results := results[string]\n\t\t_, exists_in_target := target[string]\n\t\tswitch {\n\t\tcase !exists_in_target:\n\t\t\tfallthrough\n\t\tcase exists_in_target \u0026\u0026 (is_valid || !exists_in_results):\n\t\t\tresults[string] = exists_in_target\n\t\t}\n\t}\n}\n\nfunc longestCommonPrefix(strings []string) (result string) {\n\tresults := make(map[string]bool)\n\tvar previous map[string]bool\n\tfor index, string := range strings {\n\t\tcurrent := substrings(string)\n\t\tif index == 0 {\n\t\t\tprevious = current\n\t\t}\n\t\tstring_in_maps(previous, current, results)\n\t\tstring_in_maps(current, previous, results)\n\t\tprevious = current\n\t}\n\tfor string, valid := range results {\n\t\tif valid \u0026\u0026 len(string) \u003e len(result) {\n\t\t\tresult = string\n\t\t}\n\t}\n\treturn\n}\n\n",
    "title": "Longest Common Prefix",
    "url": "/submissions/detail/689740949/",
    "lang_name": "Go",
    "time": "3 years, 2 months",
    "timestamp": 1651247464,
    "status": 10,
    "runtime": "33 ms",
    "is_pending": "Not Pending",
    "memory": "6.5 MB",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
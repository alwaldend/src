{
    "id": 1246395216,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 863,
    "title_slug": "sum-of-distances-in-tree",
    "code": "\nfunc sumOfDistancesInTree(n int, edges [][]int) []int {\n\tgraph := make(map[int][]int)\n\tcount := make([]int, n)\n\tres := make([]int, n)\n\n\tfor _, edge := range edges {\n\t\tu, v := edge[0], edge[1]\n\t\tgraph[u] = append(graph[u], v)\n\t\tgraph[v] = append(graph[v], u)\n\t}\n\n\tvar dfs1 func(cur, parent int)\n\tdfs1 = func(cur, parent int) {\n\t\tcount[cur] = 1\n\t\tfor _, child := range graph[cur] {\n\t\t\tif child != parent {\n\t\t\t\tdfs1(child, cur)\n\t\t\t\tcount[cur] += count[child]\n\t\t\t\tres[cur] += res[child] + count[child]\n\t\t\t}\n\t\t}\n\t}\n\n\tvar dfs2 func(cur, parent int)\n\tdfs2 = func(cur, parent int) {\n\t\tfor _, child := range graph[cur] {\n\t\t\tif child != parent {\n\t\t\t\tres[child] = res[cur] + n - 2*count[child]\n\t\t\t\tdfs2(child, cur)\n\t\t\t}\n\t\t}\n\t}\n\n\tdfs1(0, -1)\n\tdfs2(0, -1)\n\n\treturn res\n}\n",
    "title": "Sum of Distances in Tree",
    "url": "/submissions/detail/1246395216/",
    "lang_name": "Go",
    "time": "1Â year",
    "timestamp": 1714554264,
    "status": 10,
    "runtime": "173 ms",
    "is_pending": "Not Pending",
    "memory": "17.7 MB",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
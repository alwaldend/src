{
    "id": 1089803621,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 2347,
    "title_slug": "count-nodes-equal-to-average-of-subtree",
    "code": "/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc averageOfSubtree(root *TreeNode) int {\n    _, _, answer := getAverage(root)\n    return answer\n}\n\nfunc getAverage(root *TreeNode) (int, int, int) {\n    if root == nil {\n        return 0, 0, 0\n    }\n    sum, count, validNodes := root.Val, 1, 0\n    leftSum, leftCount, leftValidNodes := getAverage(root.Left)\n    rightSum, rightCount, rightValidNodes := getAverage(root.Right)\n    validNodes += leftValidNodes + rightValidNodes\n    sum += leftSum + rightSum\n    count += leftCount + rightCount\n    if sum / count == root.Val {\n        validNodes += 1\n    }\n    return sum, count, validNodes\n}",
    "title": "Count Nodes Equal to Average of Subtree",
    "url": "/submissions/detail/1089803621/",
    "lang_name": "Go",
    "time": "1 year, 6 months",
    "timestamp": 1698921166,
    "status": 10,
    "runtime": "5 ms",
    "is_pending": "Not Pending",
    "memory": "4.3 MB",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
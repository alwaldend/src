{
    "id": 1087492568,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 103,
    "title_slug": "binary-tree-zigzag-level-order-traversal",
    "code": "/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc zigzagLevelOrder(root *TreeNode) [][]int {\n    if root == nil {\n        return [][]int{}\n    }\n\n    queue, answer := []*TreeNode{root}, [][]int{}\n    leftToRight := true\n\n    for length := len(queue); length != 0; length = len(queue) {\n        answerRow := []int{}\n\n        for i := 0; i \u003c length; i++ {\n            node := queue[0]\n            queue = queue[1:]\n\n            answerRow = append(answerRow, node.Val)\n            if left := node.Left; left != nil {\n                queue = append(queue, left)\n            }\n            if right := node.Right; right != nil {\n                queue = append(queue, right)\n            }\n        }\n        if !leftToRight {\n            slices.Reverse(answerRow)\n        }\n        leftToRight = !leftToRight\n        answer = append(answer, answerRow)\n    }\n\n    return answer\n}",
    "title": "Binary Tree Zigzag Level Order Traversal",
    "url": "/submissions/detail/1087492568/",
    "lang_name": "Go",
    "time": "1 year, 8 months",
    "timestamp": 1698664488,
    "status": 10,
    "runtime": "1 ms",
    "is_pending": "Not Pending",
    "memory": "2.5 MB",
    "compare_result": "111111111111111111111111111111111",
    "flag_type": 1
}
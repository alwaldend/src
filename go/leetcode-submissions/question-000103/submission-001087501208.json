{
    "id": 1087501208,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 103,
    "title_slug": "binary-tree-zigzag-level-order-traversal",
    "code": "/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc zigzagLevelOrder(root *TreeNode) [][]int {\n    if root == nil {\n        return [][]int{}\n    }\n\n    queue, answer := []*TreeNode{root}, [][]int{}\n    ltr := true\n\n    for length := len(queue); length != 0; length = len(queue) {\n        answerRow := []int{}\n        for i := 0; i \u003c length; i++ {\n            node := queue[i]\n            if node.Left != nil {\n                queue = append(queue, node.Left)\n            }\n            if node.Right != nil {\n                queue = append(queue, node.Right)\n            }\n            answerRow = append(answerRow, node.Val)\n        }\n        if !ltr {\n            slices.Reverse(answerRow)\n        }\n        queue = queue[length:]\n        ltr = !ltr\n        answer = append(answer, answerRow)\n    }\n\n    return answer\n}",
    "title": "Binary Tree Zigzag Level Order Traversal",
    "url": "/submissions/detail/1087501208/",
    "lang_name": "Go",
    "time": "1 year, 9 months",
    "timestamp": 1698665567,
    "status": 10,
    "runtime": "2 ms",
    "is_pending": "Not Pending",
    "memory": "2.6 MB",
    "compare_result": "111111111111111111111111111111111",
    "flag_type": 1
}
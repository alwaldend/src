{
    "id": 1216513025,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 3225,
    "title_slug": "length-of-longest-subarray-with-at-most-k-frequency",
    "code": "func maxSubarrayLength(nums []int, k int) int {\n    i := 0\n    j := 0\n    n := len(nums)\n    ans := 1\n    mp := make(map[int]int)\n\n    for i \u003c n {\n        mp[nums[i]]++\n        for mp[nums[i]] \u003e k {\n            mp[nums[j]]--\n            j++\n        }\n        if i-j+1 \u003e ans {\n            ans = i - j + 1\n        }\n        i++\n    }\n    return ans\n}",
    "title": "Length of Longest Subarray With at Most K Frequency",
    "url": "/submissions/detail/1216513025/",
    "lang_name": "Go",
    "time": "1 year, 3 months",
    "timestamp": 1711641778,
    "status": 10,
    "runtime": "176 ms",
    "is_pending": "Not Pending",
    "memory": "11.8 MB",
    "compare_result
    "flag_type": 1
}
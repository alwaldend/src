{
    "id": 1087463750,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 199,
    "title_slug": "binary-tree-right-side-view",
    "code": "/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc rightSideView(root *TreeNode) []int {\n    if root == nil {\n        return []int{}\n    }\n\n    q_cur, q_next, answer := []*TreeNode{root}, []*TreeNode{}, []int{}\n\n    for len(q_cur) != 0 {\n        var last int\n        for _, node := range q_cur {\n            if left := node.Left; left != nil {\n                q_next = append(q_next, left)\n            }\n            if right := node.Right; right != nil {\n                q_next = append(q_next, right)\n            }\n            last = node.Val\n        }\n\n        answer = append(answer, last)\n        q_cur = q_cur[:0]\n        q_cur, q_next = q_next, q_cur\n    }\n\n    return answer\n} ",
    "title": "Binary Tree Right Side View",
    "url": "/submissions/detail/1087463750/",
    "lang_name": "Go",
    "time": "1 year, 6 months",
    "timestamp": 1698660998,
    "status": 10,
    "runtime": "2 ms",
    "is_pending": "Not Pending",
    "memory": "2.3 MB",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
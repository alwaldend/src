{
    "id": 1231309742,
    "status_display": "Accepted",
    "lang": "golang",
    "question_id": 85,
    "title_slug": "maximal-rectangle",
    "code": "func maximalRectangle(matrix [][]byte) int {\n    heights := make([]int, len(matrix[0]) + 1)\n    heights[len(heights)-1] = -1\n    mx := 0\n    for _, row := range matrix {\n        for i := range row {\n            if row[i] == '1' {\n                heights[i]++\n            } else {\n                heights[i] = 0\n            }\n        }\n\n        stack := []int{}\n        for i, currentHeight := range heights {\n            for len(stack) \u003e 0 \u0026\u0026 heights[stack[len(stack)-1]] \u003e currentHeight {\n                prev := heights[stack[len(stack)-1]]\n                stack = stack[:len(stack)-1]\n\n                width := i\n                if len(stack) \u003e 0 {\n                    width = i - stack[len(stack)-1] - 1\n                }\n                mx = max(mx, prev * width)\n            }\n            stack = append(stack, i)\n        } \n    }\n    return mx\n}",
    "title": "Maximal Rectangle",
    "url": "/submissions/detail/1231309742/",
    "lang_name": "Go",
    "time": "1 year, 3 months",
    "timestamp": 1713022367,
    "status": 10,
    "runtime": "4 ms",
    "is_pending": "Not Pending",
    "memory": "5 MB",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
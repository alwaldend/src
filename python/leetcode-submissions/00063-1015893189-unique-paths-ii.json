{
    "id": 1015893189,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 63,
    "title_slug": "unique-paths-ii",
    "code": "class Solution:\n    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -\u003e int:\n        row_count = len(obstacleGrid)\n        column_count = len(obstacleGrid[0])\n        # dp = [[0] * column_count for _ in range(row_count)]\n\n        # for row in range(row_count):\n        #     for column in range(column_count):\n\n        @cache\n        def dp(row: int, column: int) -\u003e int:\n            if row == row_count or column == column_count or obstacleGrid[row][column] == 1:\n                return 0\n            \n            if row == row_count - 1 and column == column_count - 1:\n                return 1\n            \n            return dp(row + 1, column) + dp(row, column + 1)\n        \n        return dp(0, 0)",
    "title": "Unique Paths II",
    "url": "/submissions/detail/1015893189/",
    "lang_name": "Python3",
    "time": "1 year, 9 months",
    "timestamp": 1691516839,
    "status": 10,
    "runtime": "54 ms",
    "is_pending": "Not Pending",
    "memory": "16.6 MB",
    "compare_result": "11111111111111111111111111111111111111111",
    "flag_type": 1
}
{
    "id": 1057808867,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 77,
    "title_slug": "combinations",
    "code": "class Solution:\n    def combine(self, n: int, k: int) -\u003e List[List[int]]:\n        current = []\n        \n        def backtrack(first: int) -\u003e Generator[None, None, List[int]]:\n            if len(current) == k:\n                yield tuple(current[:])\n                return\n\n            for i in range(first, n + 1):\n                current.append(i)\n                yield from backtrack(i + 1)\n                current.pop()\n            \n            return\n\n        return tuple(combination for combination in backtrack(1)) ",
    "title": "Combinations",
    "url": "/submissions/detail/1057808867/",
    "lang_name": "Python3",
    "time": "1 year, 7 months",
    "timestamp": 1695549357,
    "status": 10,
    "runtime": "964 ms",
    "is_pending": "Not Pending",
    "memory": "61.7 MB",
    "compare_result": "111111111111111111111111111",
    "flag_type": 1
}
{
    "id": 998288385,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 17,
    "title_slug": "letter-combinations-of-a-phone-number",
    "code": "class Solution:\n    def letterCombinations(self, digits: str) -\u003e List[str]:\n        length = len(digits)\n        if length == 0:\n            return []\n        \n        digit_map: Dict[int, str] = {\n            1: [],\n            2: [\"a\", \"b\", \"c\"],\n            3: [\"d\", \"e\", \"f\"],\n            4: [\"g\", \"h\", \"i\"],\n            5: [\"j\", \"k\", \"l\"],\n            6: [\"m\", \"n\", \"o\"],\n            7: [\"p\", \"q\", \"r\", \"s\"],\n            8: [\"t\", \"u\", \"v\"],\n            9: [\"w\", \"x\", \"y\", \"z\"],\n            0: [\" \"]\n        }\n        result: List[List[str]] = [\n            digit_map[int(digit)] for digit in digits\n        ]\n        return [\"\".join(i) for i in product(*result)]",
    "title": "Letter Combinations of a Phone Number",
    "url": "/submissions/detail/998288385/",
    "lang_name": "Python3",
    "time": "1 year, 9 months",
    "timestamp": 1689755165,
    "status": 10,
    "runtime": "52 ms",
    "is_pending": "Not Pending",
    "memory": "16.3 MB",
    "compare_result": "1111111111111111111111111",
    "flag_type": 1
}
{
    "id": 1015556891,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 33,
    "title_slug": "search-in-rotated-sorted-array",
    "code": "class Solution:\n    def search(self, nums: List[int], target: int) -\u003e int:\n        nums_count = len(nums)\n        left, right = 0, len(nums) - 1\n\n        first_num, last_num = nums[0], nums[-1]\n        if first_num == target:\n            return 0\n        if last_num == target:\n            return nums_count - 1\n        \n        # Find the index of the pivot element (the smallest element)\n        while left \u003c= right:\n            mid = left + (right - left) // 2\n            if nums[mid] \u003e last_num:\n                left = mid + 1\n            else:\n                right = mid - 1\n        \n        pivot_num = nums[left]\n        if pivot_num == target:\n            return left\n        \n        if pivot_num \u003c target \u003c last_num:\n            right = nums_count - 1\n        else:\n            left = 0\n        \n        while left \u003c= right:\n            mid = (left + right) // 2\n            mid_num = nums[mid]\n            if mid_num == target:\n                return mid\n            elif mid_num \u003e target:\n                right = mid - 1\n            else:\n                left = mid + 1\n        \n        return -1",
    "title": "Search in Rotated Sorted Array",
    "url": "/submissions/detail/1015556891/",
    "lang_name": "Python3",
    "time": "1 year, 9 months",
    "timestamp": 1691492101,
    "status": 10,
    "runtime": "46 ms",
    "is_pending": "Not Pending",
    "memory": "16.7 MB",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
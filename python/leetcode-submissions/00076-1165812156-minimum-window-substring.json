{
    "id": 1165812156,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 76,
    "title_slug": "minimum-window-substring",
    "code": "class Solution:\n    def minWindow(self, s: str, t: str) -\u003e str:\n        if not s or not t:\n            return \"\"\n\n        dictT = defaultdict(int)\n        for c in t:\n            dictT[c] += 1\n\n        required = len(dictT)\n        l, r = 0, 0\n        formed = 0\n\n        windowCounts = defaultdict(int)\n        ans = [-1, 0, 0]\n\n        while r \u003c len(s):\n            c = s[r]\n            windowCounts[c] += 1\n\n            if c in dictT and windowCounts[c] == dictT[c]:\n                formed += 1\n\n            while l \u003c= r and formed == required:\n                c = s[l]\n\n                if ans[0] == -1 or r - l + 1 \u003c ans[0]:\n                    ans[0] = r - l + 1\n                    ans[1] = l\n                    ans[2] = r\n\n                windowCounts[c] -= 1\n                if c in dictT and windowCounts[c] \u003c dictT[c]:\n                    formed -= 1\n\n                l += 1\n\n            r += 1\n\n        return \"\" if ans[0] == -1 else s[ans[1]:ans[2] + 1]\n\n",
    "title": "Minimum Window Substring",
    "url": "/submissions/detail/1165812156/",
    "lang_name": "Python3",
    "time": "1 year, 3 months",
    "timestamp": 1707049028,
    "status": 10,
    "runtime": "91 ms",
    "is_pending": "Not Pending",
    "memory": "17.4 MB",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
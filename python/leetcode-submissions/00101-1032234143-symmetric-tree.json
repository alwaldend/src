{
    "id": 1032234143,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 101,
    "title_slug": "symmetric-tree",
    "code": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: Optional[TreeNode]) -\u003e bool:\n        return self.check(root.left, root.right)\n\n    def check(self, left: TreeNode, right: TreeNode) -\u003e bool:\n        if not left and not right:\n            return True\n        \n        if not left or not right or left.val != right.val:\n            return False\n        \n        return self.check(left.left, right.right) and self.check(left.right, right.left)\n",
    "title": "Symmetric Tree",
    "url": "/submissions/detail/1032234143/",
    "lang_name": "Python3",
    "time": "1 year, 8 months",
    "timestamp": 1693052671,
    "status": 10,
    "runtime": "44 ms",
    "is_pending": "Not Pending",
    "memory": "16.5 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
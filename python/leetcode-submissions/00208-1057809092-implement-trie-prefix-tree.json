{
    "id": 1057809092,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 208,
    "title_slug": "implement-trie-prefix-tree",
    "code": "class Trie:\n\n    def __init__(self):\n        self.root = {}\n\n    def insert(self, word: str) -\u003e None:\n        cur = self.root\n        for char in word:\n            if char not in cur:\n                cur[char] = {}\n            cur = cur[char]\n        \n        cur[\"_is_word\"] = None\n\n    def search(self, word: str) -\u003e bool:\n        cur = self.root\n        for char in word:\n            if char not in cur:\n                return False\n            cur = cur[char]\n        \n        return \"_is_word\" in cur\n\n    def startsWith(self, prefix: str) -\u003e bool:\n        cur = self.root\n        for char in prefix:\n            if char not in cur:\n                return False\n            cur = cur[char]\n            \n        return True\n\n\n# Your Trie object will be instantiated and called as such:\n# obj = Trie()\n# obj.insert(word)\n# param_2 = obj.search(word)\n# param_3 = obj.startsWith(prefix)",
    "title": "Implement Trie (Prefix Tree)",
    "url": "/submissions/detail/1057809092/",
    "lang_name": "Python3",
    "time": "1 year, 7 months",
    "timestamp": 1695549382,
    "status": 10,
    "runtime": "105 ms",
    "is_pending": "Not Pending",
    "memory": "29.8 MB",
    "compare_result": "1111111111111111",
    "flag_type": 1
}
{
    "id": 1178740285,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 2479,
    "title_slug": "meeting-rooms-iii",
    "code": "class Solution:\n    def mostBooked(self, n: int, meetings: List[List[int]]) -\u003e int:\n        unused_rooms, used_rooms = list(range(n)), []\n        heapify(unused_rooms)\n        meeting_count = [0] * n\n        for start, end in sorted(meetings):\n            while used_rooms and used_rooms[0][0] \u003c= start:\n                _, room = heappop(used_rooms)\n                heappush(unused_rooms, room)\n            if unused_rooms:\n                room = heappop(unused_rooms)\n                heappush(used_rooms, [end, room])\n            else:\n                room_availability_time, room = heappop(used_rooms)\n                heappush(\n                    used_rooms,\n                    [room_availability_time + end - start, room]\n                )\n            meeting_count[room] += 1\n        return meeting_count.index(max(meeting_count))",
    "title": "Meeting Rooms III",
    "url": "/submissions/detail/1178740285/",
    "lang_name": "Python3",
    "time": "1 year, 2 months",
    "timestamp": 1708249546,
    "status": 10,
    "runtime": "1199 ms",
    "is_pending": "Not Pending",
    "memory": "62.2 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
{
    "id": 1279654463,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 876,
    "title_slug": "hand-of-straights",
    "code": "class Solution:\n    def isNStraightHand(self, hand: List[int], groupSize: int) -\u003e bool:\n        # Step 1: Check if grouping is possible\n        if len(hand) % groupSize != 0:\n            return False\n        \n        # Step 2: Count the occurrences of each card\n        count = Counter(hand)\n        \n        # Step 3: Sort the unique card values\n        sorted_keys = sorted(count.keys())\n        \n        # Step 4: Form consecutive groups\n        for key in sorted_keys:\n            if count[key] \u003e 0:  # If this card is still available\n                start_count = count[key]\n                # Check and form a group starting from `key`\n                for i in range(key, key + groupSize):\n                    if count[i] \u003c start_count:\n                        return False\n                    count[i] -= start_count\n        \n        # Step 5: Return True if all groups are formed successfully\n        return True\n",
    "title": "Hand of Straights",
    "url": "/submissions/detail/1279654463/",
    "lang_name": "Python3",
    "time": "11 months, 1 week",
    "timestamp": 1717687323,
    "status": 10,
    "runtime": "149 ms",
    "is_pending": "Not Pending",
    "memory": "18.1 MB",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
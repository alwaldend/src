{
    "id": 1137494224,
    "status_display": "Accepted",
    "lang": "python3",
    "question_id": 300,
    "title_slug": "longest-increasing-subsequence",
    "code": "class Solution:\n    def lengthOfLIS(self, nums: List[int]) -\u003e int:\n        if not nums:\n            return 0\n\n        n = len(nums)\n        dp = [1] * n\n\n        for i in range(1, n):\n            for j in range(i):\n                if nums[i] \u003e nums[j]:\n                    dp[i] = max(dp[i], dp[j] + 1)\n\n        return max(dp)\n\n",
    "title": "Longest Increasing Subsequence",
    "url": "/submissions/detail/1137494224/",
    "lang_name": "Python3",
    "time": "1 year, 4 months",
    "timestamp": 1704448849,
    "status": 10,
    "runtime": "1779 ms",
    "is_pending": "Not Pending",
    "memory": "17.8 MB",
    "compare_result": "1111111111111111111111111111111111111111111111111111111",
    "flag_type": 1
}
[[Submissions]]
  Id = 1704814919
  StatusDisplay = "Accepted"
  Lang = "python3"
  QuestionId = 2079
  TitleSlug = "delete-duplicate-folders-in-system"
  Code = "class Trie:\n    serial: str = \"\"\n    children: dict[str, \"Trie\"]\n\n    def __init__(self) -> None:\n        self.children = dict()\n\n\nclass Solution:\n    def deleteDuplicateFolder(self, paths: List[List[str]]) -> List[List[str]]:\n        root = Trie()\n        freq = Counter()\n\n        for path in paths:\n            cur = root\n            for node in path:\n                if node not in cur.children:\n                    cur.children[node] = Trie()\n                cur = cur.children[node]\n\n        \n        def construct(node: Trie) -> None:\n            if not node.children:\n                return\n\n            serial: list[str] = []\n            for folder, child in node.children.items():\n                construct(child)\n                serial.append(f\"{folder}({child.serial})\")\n\n            serial.sort()\n            node.serial = \"\".join(serial)\n            freq[node.serial] += 1\n\n        construct(root)\n\n        ans = list()\n        path = list()\n\n        def operate(node: Trie) -> None:\n            if freq[node.serial] > 1:\n                return\n            if path:\n                ans.append(path[:])\n\n            for folder, child in node.children.items():\n                path.append(folder)\n                operate(child)\n                path.pop()\n\n        operate(root)\n        return ans"
  Title = "Delete Duplicate Folders in System"
  Url = "/submissions/detail/1704814919/"
  LangName = "Python3"
  Timestamp = 1753019608
  Status = 10
  Runtime = "177 ms"
  IsPending = "Not Pending"
  Memory = "48 MB"
  CompareResult = "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  HasNotes = false
  FlagType = 1
